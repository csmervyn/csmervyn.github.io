<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>墨客人生</title><link>http://example.org/</link><description>Recent content on 墨客人生</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><lastBuildDate>Tue, 26 Dec 2023 20:10:48 +0800</lastBuildDate><atom:link href="http://example.org/index.xml" rel="self" type="application/rss+xml"/><item><title>How to Set Username and Email in Git</title><link>http://example.org/posts/how-to-set-username-and-email-in-git/</link><pubDate>Tue, 26 Dec 2023 20:10:48 +0800</pubDate><guid>http://example.org/posts/how-to-set-username-and-email-in-git/</guid><description>Git 中的 user.name 和 user.email 的 scope 的范围可以为单个 repository 的或全局的。利用这点上下文，我们可以很好解决多个 repository 中的 commit 需要不同 Author 的问题。下面首先分别阐述如何设置 scope 为单个 repository 和如何设置全局的的user.name 和 user.email。
Git 中的 user.name 和 user.email 的作用范围可分为单个 repository 和全局两种。这一特性使得我们能够有效解决在多个 repository 中进行 commit 时需要使用不同 Author 信息的问题。以下将分别详细阐述如何将 user.name 和 user.email 的作用范围设置为单个 repository 和全局。
将 user.name 和 user.email 的作用范围设置为单个 repository 链接到标题 进入到 repository 的根目录
设置 Git username 和 email
git config user.name csmervyn git config user.email csmervyn@gmail.com 确认设置是否生效
git config user.name git config user.</description></item><item><title>About me</title><link>http://example.org/about-me/</link><pubDate>Sat, 06 May 2023 08:08:46 +0800</pubDate><guid>http://example.org/about-me/</guid><description>👋 Hi, I&amp;rsquo;m Xinxin He, a full-stack developer with 7 years of R&amp;amp;D experience, based in China.
✍️ This blog focuses on develpment, learning and life insights.</description></item><item><title>如何构建自己的个人博客</title><link>http://example.org/posts/config-personal-website/how-to-create-your-personal-website/</link><pubDate>Thu, 04 May 2023 13:31:11 +0800</pubDate><guid>http://example.org/posts/config-personal-website/how-to-create-your-personal-website/</guid><description>构建属于自己的个人博客系统，往往涉及多方面的问题。例如：
使用哪个 framework 构建自己的博客系统 使用哪个内容托管平台托管自己的静态网友 域名绑定 1 使用 Hugo 构建个人博客 链接到标题 1.1 安装与配置 Hugo 链接到标题 1.1.1 安装 Hugo 链接到标题 如果是 Mac os 可以使用包管理器进行安装 Hugo。
brew install hugo 执行的结果：
==&amp;gt; Fetching hugo ==&amp;gt; Downloading https://ghcr.io/v2/homebrew/core/hugo/manifests/0.111.3 ################################################################ 100.0% ==&amp;gt; Downloading https://ghcr.io/v2/homebrew/core/hugo/blobs/sha256:0808 ==&amp;gt; Downloading from https://pkg-containers.githubusercontent.com/ghcr1 ################################################################ 100.0% ==&amp;gt; Pouring hugo--0.111.3.arm64_monterey.bottle.tar.gz ==&amp;gt; Caveats zsh completions have been installed to: /opt/homebrew/share/zsh/site-functions ==&amp;gt; Summary 🍺 /opt/homebrew/Cellar/hugo/0.111.3: 48 files, 56.4MB ==&amp;gt; Running `brew cleanup hugo`... Disable this behaviour by setting HOMEBREW_NO_INSTALL_CLEANUP.</description></item></channel></rss>